FORMAT: 1A
HOST: http://127.0.0.1:8000/

# disposalapi
Its a simple API allowing consumers to order a garbage disposal.

# Group Containers
## Containers [/containers]

### List All Containers [GET]

+ Response 200 (application/json)

        [
          {
        "id": 1,
        "name": "Paper1",
        "size": 100,
        "type": "Paper",
        "price": "200"
          },
        {
        "id": 2,
        "name": "Paper2",
        "size": 200,
        "type": "Paper",
        "price": "300"
         }
         ]


+ Response 401 (application/html)

        {
        "detail": "Given token not valid for any token type",
        "code": "token_not_valid",
        "messages": [
        {
            "token_class": "AccessToken",
            "token_type": "access",
            "message": "Token is invalid or expired"
        }
         ]
         }
        
+ Response 404 (application/html)

        {
        <!doctype html><html lang="en"><head><title>Not Found</title></head><body><h1>Not Found</h1><p>The requested resource was not found on this server.</p></body></html>
        }
    
### Create a New Container [POST]

+ Request (application/json)

        {
         "name": "Plastik1",
        "size": 300,
        "type": "plastik",
        "price": 2
        }

+ Response 201 (application/json)

        {
         "id": 3,
         "name": "Plastik1",
         "size": 300,
         "type": "plastik",
         "price": 2
        }

+ Response 400 (application/html)

        {
        "detail": "JSON parse error - Expecting value: line 6 column 1 (char 72)"
        }
        
+ Response 401 (application/html)

        {
        "detail": "Given token not valid for any token type",
        "code": "token_not_valid",
        "messages": [
            {
                "token_class": "AccessToken",
                "token_type": "access",
                "message": "Token is invalid or expired"
            }
        ]
        }
        
### Get single container [GET/container/{ContainerID}]
+ Parameters
    + ContainerID (number) - ID of resource in the form of an integer

+ Response 200 (application/json)

        {
            "id": 1,
            "name": "Paper1",
            "size": 100,
            "type": "Paper",
            "price": "200"
        }
        
+ Response 404 (application/json)

        {
            "detail": "Not found."
        }
        
### Update single container [PUT/containers/{ContainerID}]
+ Parameters
    + ContainerID (number) - ID of resource in the form of an integer
    
+ Request (application/json)

        {
          "name": "Plastik1",
          "size": 300,
          "type": "plastiki",
          "price": 2
        }
        
+ Response 200 (application/json)

        {
            "id": 3,
            "name": "Plastik1",
            "size": 300,
            "type": "plastiki",
            "price": 2
        }

+ Response 404 (application/json)

        {
            "detail": "Not found."
        }

### Partialy update a single container [PATCH/container/{ContainerID}]
+ Parameters
    + ContainerID (number) - ID of resource in the form of an integer

+ Request (application/json)

        {
          "name": "plastik1",
          "size": 301,
          "type": "plastiki",
          "price": 2
        }

+ Response 200 (application/json)

        {
            "id": 1,
            "name": "plastik1",
            "size": 301,
            "type": "plastiki",
            "price": 2
        }

+ Response 404 (application/json)

        {
            "detail": "Not found."
        }
        
### Remove a single container [DELETE/container/{ContainerID}]
+ Parameters
    + ContainerID (number) - ID of resource in the form of an integer

+ Response 204 (application/json)

+ Response 404 (application/json)

        {
            "detail": "Not found."
        }
        

## Addresses [/addresses]

### List All addresses [GET]

+ Response 200 (application/json)

        [
        {
            "id": 1,
            "street": "Kowalskiego",
            "house": "20",
            "apart": "3",
            "zip": "92222",
            "city": "Opole"
        },
        {
            "id": 2,
            "street": "Piaskowa",
            "house": "40",
            "apart": "7",
            "zip": "77122",
            "city": "Krakow"
        }
        ]

+ Response 401 (application/html)

        {
            "detail": "Given token not valid for any token type",
            "code": "token_not_valid",
            "messages": [
                {
                    "token_class": "AccessToken",
                    "token_type": "access",
                    "message": "Token is invalid or expired"
                }
            ]
        }

+ Response 404 (application/html)

        {
        <!doctype html><html lang="en"><head><title>Not Found</title></head><body><h1>Not Found</h1><p>The requested resource was not found on this server.</p></body></html>
        }

### Create an address [POST]

+ Request (application/json)

        {
          "street": "Dobra",
          "house": "21",
          "apart": "33",
          "zip": "12311",
          "city": "Nosy"
        }

+ Response 201 (application/json)

        {
            "id": 3,
            "street": "Dobra",
            "house": "21",
            "apart": "33",
            "zip": "12311",
            "city": "Nosy"
        }
        
+ Response 400 (application/html)
        
        {
            "detail": "JSON parse error - Expecting ',' delimiter: line 2 column 15 (char 16)"
        }

+ Response 401 (application/html)

        {
            "detail": "Given token not valid for any token type",
            "code": "token_not_valid",
            "messages": [
                {
                    "token_class": "AccessToken",
                    "token_type": "access",
                    "message": "Token is invalid or expired"
                }
            ]
        }
        
### Get single addess [GET/addresses/{AdressessID}]
+ Parameters
    + AdressessID (required,number) - ID of resource in the form of an integer

+ Response 200 (application/json)

        {
            "id": 1,
            "street": "Kowalskiego",
            "house": "20",
            "apart": "3",
            "zip": "92222",
            "city": "Opole"
        }

+ Response 404 (application/json)

        {
            "detail": "Not found."
        }

### Update a single address [PUT/addresses/{AdressesID}]
+ parameters
    + AdressesID (required,number) - ID of resource in the form of an integer
    
+ Request (application/json)

        {
            "street": "reprehenderit Lorem",
            "house": "4",
            "apart": "4",
            "zip": "34344",
            "city": "fugiat"
        }
        
+ Response 200

        {
            "id": 1,
            "street": "reprehenderit Lorem",
            "house": "4",
            "apart": "4",
            "zip": "34344",
            "city": "fugiat"
        }

+ Response 404

        {
            "detail": "Not found."
        }

### Partially update a single address [PATCH/addresses/{AdressesID}]
+ Parameters
    + AdressesID (required,number) - ID of resource in the form of an integer

+ Request

        {
            "street": "reprehenderit Lorem",
            "house": "5",
            "apart": "4",
            "zip": "34344",
            "city": "fugiat"
        }

+ Response 200

        {
            "id": 1,
            "street": "reprehenderit Lorem",
            "house": "5",
            "apart": "4",
            "zip": "34344",
            "city": "fugiat"
        }

+ Response 404

        {
            "detail": "Not found."
        }
        
### Remove a single address [DELETE/addresses/{AdressesID}]
+ Parameters
    + AdressesID (required,number) - ID of resource in the form of an integer

+ Response 204

+ Response 404

        {
            "detail": "Not found."
        }


## Clients [/clients]

### List All clients [GET]

+ Response 200 (application/json)

        [
            {
                "id": 1,
                "name": "Jan",
                "lname": "Kowal",
                "phone": "882912311",
                "address": "reprehenderit Lorem Duis/paria, comm fugiat"
            },
            {
                "id": 2,
                "name": "Tomasz",
                "lname": "Nowak",
                "phone": "827345981",
                "address": "Piaskowa 40/7, 77122 Krakow"
            },
            {
                "id": 3,
                "name": "Toaaamasz",
                "lname": "Noaaaawak",
                "phone": "827345981a",
                "address": "reprehenderit Lorem Duis/paria, comm fugiat"
            }
        ]

+ Response 401 (application/html)

        {
            "detail": "Given token not valid for any token type",
            "code": "token_not_valid",
            "messages": [
                {
                    "token_class": "AccessToken",
                    "token_type": "access",
                    "message": "Token is invalid or expired"
                }
            ]
        }

+ Response 404 (application/html)

        {
        <!doctype html><html lang="en"><head><title>Not Found</title></head><body><h1>Not Found</h1><p>The requested resource was not found on this server.</p></body></html>
        }

### Create a clients [POST]

+ Request (application/json)

        {
          "name": "ex voluptate",
          "lname": "ut Lorem",
          "phone": "officia",
          "address": 2
        }

+ Response 201 (application/json)

        {
            "id": 4,
            "name": "ex voluptate",
            "lname": "ut Lorem",
            "phone": "officia",
            "address": 2
        }

+ Response 400 (application/html)

        {
            "address": [
                "Invalid pk \"61384937\" - object does not exist."
            ]
        }

+ Response 401 (application/html)

        {
            "detail": "Given token not valid for any token type",
            "code": "token_not_valid",
            "messages": [
                {
                    "token_class": "AccessToken",
                    "token_type": "access",
                    "message": "Token is invalid or expired"
                }
            ]
        }
        
### Get single client [GET/clients/{ClientsID}]
+ Parameters
    + ClientsID (required,number) - ID of resource in the form of an integer

+ Response 200 (application/json)

        {
            "id": 2,
            "name": "Tomasz",
            "lname": "Nowak",
            "phone": "827345981",
            "address": "Piaskowa 40/7, 77122 Krakow"
        }
        
+ Response 404 (application/json)

        {
            "detail": "Not found."
        }
        
### Update a single client [PUT/clients/{ClientsID}]
+ parameters
    + ClientsID (required,number) - ID of resource in the form of an integer

+ Request (application/json)

        {
          "name": "ex voluptate",
          "lname": "ut Lorem",
          "phone": "officia",
          "address": 1
        }
        
+ Response 200

        {
            "id": 1,
            "name": "ex voluptate",
            "lname": "ut Lorem",
            "phone": "officia",
            "address": 1
        }

+ Response 404

        {
            "detail": "Not found."
        }

### Partially update a single client [PATCH/clients/{ClientsID}]
+ Parameters
    + ClientsID (required,number) - ID of resource in the form of an integer

+ Request

        {
          "name": "ex voluptate",
          "lname": "ut Lorem",
          "phone": "officia",
          "address": 1
        }

+ Response 200

        {
            "id": 1,
            "name": "ex voluptate",
            "lname": "ut Lorem",
            "phone": "officia",
            "address": 1
        }

+ Response 404

        {
            "detail": "Not found."
        }
        
### Remove a single client [DELETE/clients/{ClientsID}]
+ Parameters
    + ClientsID (required,number) - ID of resource in the form of an integer


+ Response 204

+ Response 404

        {
            "detail": "Not found."
        }


## List of orders [/list-of-orders]

### List All List-of-orders objects [GET]

+ Response 200 (application/json)

        [
            {
                "id": 1,
                "order": {
                    "id": 1,
                    "order_status": "COLLECT",
                    "payment_status": "PAID",
                    "order_date": "2023-01-04",
                    "collect_date": "2023-01-13",
                    "client": {
                        "id": 1,
                        "name": "ex voluptate",
                        "lname": "ut Lorem",
                        "phone": "officia",
                        "address": "reprehenderit Lorem Duis/paria, comm fugiat"
                    }
                },
                "container": {
                    "id": 1,
                    "name": "Paper1",
                    "size": 100,
                    "type": "Paper",
                    "price": "200"
                }
            },
            {
                "id": 2,
                "order": {
                    "id": 2,
                    "order_status": "ACTIVE",
                    "payment_status": "UNPAID",
                    "order_date": "2023-01-17",
                    "collect_date": "2023-01-21",
                    "client": {
                        "id": 2,
                        "name": "Tomasz",
                        "lname": "Nowak",
                        "phone": "827345981",
                        "address": "Piaskowa 40/7, 77122 Krakow"
                    }
                },
                "container": {
                    "id": 1,
                    "name": "Paper1",
                    "size": 100,
                    "type": "Paper",
                    "price": "200"
                }
            }
        ]

+ Response 401 (application/html)

        {
            "detail": "Given token not valid for any token type",
            "code": "token_not_valid",
            "messages": [
                {
                    "token_class": "AccessToken",
                    "token_type": "access",
                    "message": "Token is invalid or expired"
                }
            ]
        }

+ Response 404 (application/html)

        {
        <!doctype html><html lang="en"><head><title>Not Found</title></head><body><h1>Not Found</h1><p>The requested resource was not found on this server.</p></body></html>
        }

### Create a list-of-orders object [POST]

+ Request (application/json)

        {
          "order": 3,
          "container": 2
        }

+ Response 201 (application/json)

        {
            "id": 6,
            "order": 3,
            "container": 2
        }

+ Response 400 (application/html)

        {
            "detail": "JSON parse error - Expecting property name enclosed in double quotes: line 2 column 14 (char 15)"
        }

+ Response 401 (application/html)

        {
            "detail": "Given token not valid for any token type",
            "code": "token_not_valid",
            "messages": [
                {
                    "token_class": "AccessToken",
                    "token_type": "access",
                    "message": "Token is invalid or expired"
                }
            ]
        }

### Get a list-of-orders object [GET/list-of-orders/{listofordersID}]
+ Parameters
    + listofordersID (required,number) - ID of resource in the form of an integer

+ Response 200 (application/json)

        {
            "id": 1,
            "order": {
                "id": 1,
                "order_status": "COLLECT",
                "payment_status": "PAID",
                "order_date": "2023-01-04",
                "collect_date": "2023-01-13",
                "client": {
                    "id": 1,
                    "name": "ex voluptate",
                    "lname": "ut Lorem",
                    "phone": "officia",
                    "address": "reprehenderit Lorem Duis/paria, comm fugiat"
                }
            },
            "container": {
                "id": 1,
                "name": "Paper1",
                "size": 100,
                "type": "Paper",
                "price": "200"
            }
        }
        
+ Response 404 (application/json)

        {
            "detail": "Not found."
        }
        
### Update a list-of-orders object [PUT/list-of-orders/{listofordersID}]
+ parameters
    + listofordersID (required,number) - ID of resource in the form of an integer
    
+ Request (application/json)

        {
          "order": 3,
          "container": 2
        }
                
+ Response 200

        {
            "id": 3,
            "order": 3,
            "container": 2
        }

+ Response 404

        {
            "detail": "Not found."
        }

### Partially update a list-of-orders object  [PATCH/list-of-orders/{listofordersID}]
+ Parameters
    + listofordersID (required,number) - ID of resource in the form of an integer

+ Request

        {
          "order": 3,
          "container": 2
        }

+ Response 200

        {
            "id": 3,
            "order": 3,
            "container": 2
        }

+ Response 404

        {
            "detail": "Not found."
        }
        
### Remove a list-of-orders object [DELETE/list-of-orders/{listofordersID}]

+ Response 204

+ Response 404

        {
            "detail": "Not found."
        }


## Orders [/orders]

### List All orders [GET]

+ Response 200 (application/json)

        [
            {
                "id": 1,
                "order_status": "COLLECT",
                "payment_status": "PAID",
                "order_date": "2023-01-04",
                "collect_date": "2023-01-13",
                "client": {
                    "id": 1,
                    "name": "ex voluptate",
                    "lname": "ut Lorem",
                    "phone": "officia",
                    "address": "reprehenderit Lorem Duis/paria, comm fugiat"
                }
            },
            {
                "id": 2,
                "order_status": "ACTIVE",
                "payment_status": "UNPAID",
                "order_date": "2023-01-17",
                "collect_date": "2023-01-21",
                "client": {
                    "id": 2,
                    "name": "Tomasz",
                    "lname": "Nowak",
                    "phone": "827345981",
                    "address": "Piaskowa 40/7, 77122 Krakow"
                }
            }
        ]
        
+ Response 401 (application/html)

        {
            "detail": "Given token not valid for any token type",
            "code": "token_not_valid",
            "messages": [
                {
                    "token_class": "AccessToken",
                    "token_type": "access",
                    "message": "Token is invalid or expired"
                }
            ]
        }

+ Response 404 (application/html)

        {
        
        <!doctype html><html lang="en"><head><title>Not Found</title></head><body><h1>Not Found</h1><p>The requested resource was not found on this server.</p></body></html>
        }

### Create an order [POST]

+ Request (application/json)

        {
          "order_date": "2002-04-10",
          "collect_date": "2011-05-20",
          "client": 1,
          "order_status": "COLLECT",
          "payment_status": "UNPAID"
        }

+ Response 201 (application/json)

         {
            "id": 3,
            "order_status": "COLLECT",
            "payment_status": "UNPAID",
            "order_date": "2002-04-10",
            "collect_date": "2011-05-20",
            "client": 1
        }

+ Response 400 (application/html)

        {
            "detail": "JSON parse error - Expecting property name enclosed in double quotes: line 5 column 29 (char 107)"
        }

+ Response 401 (application/html)

        {
            "detail": "Given token not valid for any token type",
            "code": "token_not_valid",
            "messages": [
                {
                    "token_class": "AccessToken",
                    "token_type": "access",
                    "message": "Token is invalid or expired"
                }
            ]
        }

### Get single order [GET/orders/{OrdersID}]
+ Parameters
    + OrdersID (required,number) - ID of resource in the form of an integer

+ Response 200 (application/json)

        {
            "id": 1,
            "order_status": "COLLECT",
            "payment_status": "PAID",
            "order_date": "2023-01-04",
            "collect_date": "2023-01-13",
            "client": {
                "id": 1,
                "name": "ex voluptate",
                "lname": "ut Lorem",
                "phone": "officia",
                "address": "reprehenderit Lorem Duis/paria, comm fugiat"
            }
        }
        
+ Response 404 (application/json)

        {
            "detail": "Not found."
        }
        
### Update single order [PUT/orders/{OrdersID}]
+ parameters
    + OrdersID (required,number)
    
+ Request (application/json)

        {
          "order_date": "2002-04-10",
          "collect_date": "2011-05-20",
          "client": 1,
          "order_status": "COLLECT",
          "payment_status": "UNPAID"
        }
        
+ Response 200

        {
            "id": 1,
            "order_status": "COLLECT",
            "payment_status": "UNPAID",
            "order_date": "2002-04-10",
            "collect_date": "2011-05-20",
            "client": 1
        }

+ Response 404

        {
            "detail": "Not found."
        }

### Partially update single order [PATCH/orders/{OrdersID}]
+ Parameters
    + OrdersID (required,number) - ID of resource in the form of an integer

+ Request

        {
          "order_date": "2002-04-10",
          "collect_date": "2011-05-20",
          "client": 1,
          "order_status": "COLLECT",
          "payment_status": "UNPAID"
        }

+ Response 200

        {
            "id": 1,
            "order_status": "COLLECT",
            "payment_status": "UNPAID",
            "order_date": "2002-04-10",
            "collect_date": "2011-05-20",
            "client": 1
        }

+ Response 404

        {
            "detail": "Not found."
        }
        
### Remove a single order [DELETE/orders/{OrdersID}]
+ Parameters
    + OrdersID (required,number) - ID of resource in the form of an integer

+ Response 204

+ Response 404

        {
            "detail": "Not found."
        }


## Prices [/prices]

### List All prices [GET]

+ Response 200 (application/json)

         [
            {
                "id": 1,
                "price": 200,
                "description": "200 PLN, small container price",
                "update_date": "2023-01-21"
            },
            {
                "id": 2,
                "price": 300,
                "description": "300 PLN, big container price",
                "update_date": "2023-01-21"
            }
        ]



+ Response 401 (application/html)

            {
            "detail": "Given token not valid for any token type",
            "code": "token_not_valid",
            "messages": [
                {
                    "token_class": "AccessToken",
                    "token_type": "access",
                    "message": "Token is invalid or expired"
                }
            ]
        }

+ Response 404 (application/html)

        {
        <!doctype html><html lang="en"><head><title>Not Found</title></head><body><h1>Not Found</h1><p>The requested resource was not found on this server.</p></body></html>
        }

### Create a price [POST]

+ Request (application/json)

        {
          "price": 70864494,
          "description": "cupidatat fugiat n",
          "update_date": "1966-02-03"
        }

+ Response 201 (application/json)

        {
            "id": 3,
            "price": 70864494,
            "description": "cupidatat fugiat n",
            "update_date": "1966-02-03"
        }

+ Response 400 (application/html)

        {
            "detail": "JSON parse error - Expecting property name enclosed in double quotes: line 2 column 25 (char 26)"
        }

+ Response 401 (application/html)

        {
            "detail": "Given token not valid for any token type",
            "code": "token_not_valid",
            "messages": [
                {
                    "token_class": "AccessToken",
                    "token_type": "access",
                    "message": "Token is invalid or expired"
                }
            ]
        }
        
### Get single price [GET/prices/{PricesID}]
+ Parameters
    + PricesID (number) - ID of resource in the form of an integer

+ Response 200 (application/json)

        {
            "id": 1,
            "price": 200,
            "description": "200 PLN, small container price",
            "update_date": "2023-01-21"
        }
        
+ Response 404 (application/json)

        {
            "detail": "Not found."
        }
        
### Update single price [PUT/prices/{PricesID}]
+ parameters
    + PricesID (required,number) - ID of resource in the form of an integer
    
+ Request (application/json)

        {
          "price": 70864494,
          "description": "cupidatat fugiat n",
          "update_date": "1966-02-03"
        }
        
+ Response 200

        {
            "id": 1,
            "price": 70864494,
            "description": "cupidatat fugiat n",
            "update_date": "1966-02-03"
        }

+ Response 404

        {
            "detail": "Not found."
        }

### Partially update single price [PATCH/prices/{PricesID}]
+ Parameters
    + PricesID (required,number) - ID of resource in the form of an integer

+ Request

         {
          "price": 70864494,
          "description": "cupidatat fugiat n",
          "update_date": "1966-02-03"
        }

+ Response 200

        {
            "id": 1,
            "price": 70864494,
            "description": "cupidatat fugiat n",
            "update_date": "1966-02-03"
        }

+ Response 404

        {
            "detail": "Not found."
        }
        
### Remove a single price [DELETE/prices/{PricesID}]
+ Parameters
    + PricesID (required,number) - ID of resource in the form of an integer

+ Response 204

+ Response 404

        {
            "detail": "Not found."
        }


## Token [/token]

### Token create [POST]

+ Request

        {
          "username": "user1",
          "password": "876543A1"
        }

+ Response 200

        {
            "refresh": "xxJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY3NjMwNzkyMywiaWF0IjoxNjc1MDk4MzIzLCJqdGkiOiI1ZDE4OTE1ZjM4NWE0MGMwYmFmOTc1ZWMyMTI1OTc0YiIsInVzZXJfaWQiOjN9.Zzey2Z-ZG8nkKdtKhyTYYePnoIOedqxL-g4W-P3854k",
            "access": "xxJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNjc1MTAxOTIzLCJpYXQiOjE2NzUwOTgzMjMsImp0aSI6ImExMWVlNWI3ZWExMzQwNjI5MzUzZmQxYmJmODBjZmU4IiwidXNlcl9pZCI6M30.rm1Wo2fpi5kRh1aCJ17m6ewNUZBtoDjo8X5LuhI3oh0"
        }

+ Response 401

        {
            "detail": "No active account found with the given credentials"
        }

### Token refresh [POST/container/refresh]

+ Request

        {
          "refresh": "xxJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY3NjMwNzkyMywiaWF0IjoxNjc1MDk4MzIzLCJqdGkiOiI1ZDE4OTE1ZjM4NWE0MGMwYmFmOTc1ZWMyMTI1OTc0YiIsInVzZXJfaWQiOjN9.Zzey2Z-ZG8nkKdtKhyTYYePnoIOedqxL-g4W-P3854k"
        }

+ Response 200

        {
        "access": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNjc1MTAxOTY2LCJpYXQiOjE2NzUwOTgzMjMsImp0aSI6IjhhZTdkODc5OGU2YzRjZmY5NGRjZDg2NjBmYzI2NmZkIiwidXNlcl9pZCI6M30.RmmFFDg5MPYiQpkpqOGiPLr9oW7K5LMZVlaY-p3SBYg"
        }

+ Response 401

        {
            "detail": "Token is invalid or expired",
            "code": "token_not_valid"
        }